# Default values for user-crud.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This block is for setting up information about the database container, connection settings and service
db:
  container:
    image:
      repository: postgres
      tag: "14"
    port: 5432
    volumeMount:
      name: postgres-storage
      mountPath: /var/lib/postgresql/data
    volumeClaimTemplates:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
  connection:
    name: user-service
    username: postgres
    password: admin
  service:
    name: db-service-postgres
    port: 5439

# This block is for setting up application parameters
application:
  image:
    repository: sdenisenko/simple-user-service
    # This sets the pull policy for image.
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "1.0"
  http:
    port: 8080
  hibernate:
    generation: none
    log: ALL

# This block is intended for setup an image for the database migration tool and a simple script
migration:
  image:
    repository: liquibase/liquibase
    tag: "4.27.0"
  volumeMount:
    name: changelog-volume
    rootPath: /liquibase
    mountPath: /changelog/changelog.yaml
  changelog: |
    databaseChangeLog:
      - changeSet:
          id: 1
          author: Vyacheslav Denisenko
          changes:
            - createTable:
                tableName: users
                columns:
                  - column:
                      name: id
                      type: int
                      autoIncrement: true
                      constraints:
                        primaryKey: true
                  - column:
                      name: username
                      type: varchar(255)
                      constraints:
                        unique: true
                        nullable: false
                  - column:
                      name: firstname
                      type: varchar(255)
                      constraints:
                        nullable: false
                  - column:
                      name: lastname
                      type: varchar(255)
                      constraints:
                        nullable: false
                  - column:
                      name: email
                      type: varchar(255)
                      constraints:
                        nullable: false
                  - column:
                      name: phone
                      type: varchar(255)
                      constraints:
                        nullable: false

# This will set the replicaset count
replicaCount: 5

config:
  name: app-config

secrets:
  name: app-secret

# This is to override the chart name.
nameOverride: "user-crud"
fullnameOverride: "user-crud-service"

# This is for setting Kubernetes Annotations to a Pod.
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
podLabels: {}

# This is for setting up a service
service:
  # This sets the service type
  type: ClusterIP
  # This sets the ports
  port: 80

# This block is for setting up the ingress
ingress:
  enabled: true
  className: "nginx"
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: arch.homework
      paths:
        - path: /user
          pathType: Exact
          definition: |
            Use this path for a POST request to add a new user as:
              {
                "username": "unique_username",
                "firstName": "Name",
                "lastName": "Surname",
                "email": "email@example.com",
                "phone": "+79XXXXXXXXX"
              }
        - path: /user/
          pathType: Prefix
          definition: |
            Use this path for GET, PUT, DELETE requests, pointing after the slash {userId}.
              For example, /user/1.
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}

# This is to setup the liveness and readiness probes
livenessProbe:
  httpGet:
    path: /q/health/live
    port: 8080
  initialDelaySeconds: 30
  periodSeconds: 30
  timeoutSeconds: 3
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /q/health/ready
    port: 8080
  initialDelaySeconds: 20
  periodSeconds: 20
  timeoutSeconds: 3
  failureThreshold: 3

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true